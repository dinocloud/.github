name: Galaxy apps CI/CD

on:
  push:
    branches: [ $default-branch ]
      
jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [12.x]
    steps:
        - uses: actions/checkout@v1
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - name: npm Install
          run: |
            npm install
        - name: Dev Build
          if: github.ref == 'refs/heads/dev'
          run: |
            npm run build:dev
          env:
            CI: ""
        - name: Staging Build
          if: github.ref == 'refs/heads/staging'
          run: |
            npm run build:staging
          env:
            CI: ""
        - name: Prod Build
          if: github.ref == 'refs/heads/master'
          run: |
            npm run build:prod
          env:
            CI: ""
        - name: invalidate CloudFront cache Dev
          uses: awact/cloudfront-action@master
          if: github.ref == 'refs/heads/dev'
          env:
            SOURCE_PATH: '/*'
            AWS_REGION: 'us-east-1'
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            DISTRIBUTION_ID: E10PXBTU2UOJB8
        - name: invalidate CloudFront cache Staging
          uses: awact/cloudfront-action@master
          if: github.ref == 'refs/heads/staging'
          env:
            SOURCE_PATH: '/*'
            AWS_REGION: 'us-east-1'
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            DISTRIBUTION_ID: E36LA51V7A59L
        - name: invalidate CloudFront cache Prod
          uses: awact/cloudfront-action@master
          if: github.ref == 'refs/heads/master'
          env:
            SOURCE_PATH: '/*'
            AWS_REGION: 'us-east-1'
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            DISTRIBUTION_ID: E3SUL1GSPJVLW8
        - name: Deploy to S3 Dev
          uses: jakejarvis/s3-sync-action@master
          if: github.ref == 'refs/heads/dev'
          with:
            args: --follow-symlinks --delete
          env:
            AWS_S3_BUCKET: urbano-bank-dev
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SOURCE_DIR: "build"
        - name: Deploy to S3 Staging
          uses: jakejarvis/s3-sync-action@master
          if: github.ref == 'refs/heads/staging'
          with:
            args: --follow-symlinks --delete
          env:
            AWS_S3_BUCKET: urbano-containers-staging
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SOURCE_DIR: "build"
        - name: Deploy to S3 Prod
          uses: jakejarvis/s3-sync-action@master
          if: github.ref == 'refs/heads/master'
          with:
            args: --follow-symlinks --delete
          env:
            AWS_S3_BUCKET: urbano-containers-prod
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SOURCE_DIR: "build"